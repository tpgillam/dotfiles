- defaults:
    link:
      create: true  # Create parent directories as necessary
      relink: true  # Re-generate existing links

- clean: ["~"]

- link:
    ~/.config/alacritty.toml: alacritty.toml
    ~/.config/awesome/rc.lua: awesomerc.lua
    ~/.config/karabiner/karabiner.json: 
      path: karabiner.json
      if: '[[ "$(uname)" == "Darwin" ]]'  # MacOS only
    ~/.config/nvim: nvim
    ~/.JuliaFormatter.toml: JuliaFormatter.toml
    ~/.LS_COLORS: LS_COLORS
    ~/.bashrc: bashrc
    ~/.gitconfig: gitconfig
    ~/.gitignore_global: gitignore_global
    ~/.julia/config/startup.jl: startup.jl
    ~/.ssh/config: ssh_config
    ~/.tmux.conf: tmux.conf
    ~/.vim: vim
    ~/.vimrc: vimrc
    # Poetry configuration goes into a different place on MacOS than Linux...
    ~/.config/pypoetry/config.toml:
      path: pypoetry_config.toml
      if: '[[ "$(uname)" != "Darwin" ]]'
    ~/Library/Application Support/pypoetry/config.toml:
      path: pypoetry_config.toml
      if: '[[ "$(uname)" == "Darwin" ]]'
    

- shell:
  # Update all git submodules (including the dotbot module)
  - [git submodule update --init --recursive, Installing submodules]

  # Set up Vundle & plugins.
  - dir="$HOME/.vim/bundle/Vundle.vim"; if [ ! -d $dir ]; then git clone https://github.com/gmarik/Vundle.vim.git $dir; fi
  # Note - we are avoiding chicken-and-egg errors in the vimrc.
  # there _will_ be errors when we load the vimrc, but by loading the vimrc later
  # we manage to actually install the plugins in this step.
  - [command vim --clean '+source ~/.vimrc' +PluginInstall +qall]
    
  # Neovim: Lazy.nvim 'restore' will ensure the state of neovim matches the lock file
  # in this repo.
  - [command nvim --headless "+Lazy! restore" +qa]
